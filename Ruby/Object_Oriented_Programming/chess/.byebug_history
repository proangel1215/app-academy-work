q
n
s
key
n
s
n
s
n
s
n
s
q
n
s
n
s
q
cursor_selection
s
selected_position
n
s
n
key
s
key
n
s
n
cursor_selection
s
selected_position
n
key
s
key
n
s
n
c
n
s
n
q
n
s
n
s
n
s
n
q
starting_position
q
qy
n
q
n
!board.null_piece?(starting_position.first, starting_position.last)
starting_position != nil
starting_position
c
q
starting_position
q
position
end_pos
board_copy
n
q
in_check_boolean
n
q
board
board_copy
in_check_boolean
n
q
n
q
board
board_copy
in_check_boolean
n
q
col
row
list=
board[3,7]
board
self
self.board
opponent_color
col
row
c
qc
q
self
board[3,7]
board_copy[3,7]
board_copy[3,7].moves
board
board_copy
in_check_boolean
n
q
self.board
board[3,7]
self
board_copy
board
self.class
self
list=
board_copy[1,5]
board[1,5]
col_idx
row
square_has_different_color_piece?(row, col_idx, opponent_color)
n
square_has_same_color_piece?(row, col_idx)
col_idx
row
n
col_idx
row
n
col_idx
row
s
column
col
row
n
c
q
board_copy
board[3,7].moves
board[3,7]
board_copy[3,7]
board_copy[3,7].moves
d.board_copy[3,7].moves
n
q
n
board_copy
board
in_check_boolean
n
q
n
q
board_copy[3,7]
board[3,7].moves
board[3,7]
board_copy
board
board_copy.in_check?(:black)
board_copy[1,5]
board_copy[2,5].moves
board_copy[3,7].moves
board_copy[3,7]
in_check_boolean
n
board_copy
n
q
position
board_copy
s
@position
new_position
s
self[position.first, position.last].position
self[position.first, position.last]
position
s
self
n
self
n
self[start_pos.first, start_pos.last]
self[end_pos.first, end_pos.last]
s
board
end_pos
start_pos
n
start_pos
n
end_pos
start_pos
s
q
end_pos
s
c
end_pos
list=
board_copy
n
end_pos
c
self[2,5]
position
c
q
s
rows[row][col]
col
row
s
self[position.first, position.last]
position
s
start_pos
n
end_pos
start_pos
s
position
end_pos
list=
board_copy
q
board_copy
n
q
board_copy
n
q
board_copy
n
q
board_copy[3,7].moves
board_copy[3,7].color
board_copy[3,7]
list=
board_copy
n
q
s
n
position
piece.moves
n
piece.color == color
piece.color
color
![King, NullPiece].include?(piece.class)
piece
s
piece
n
