q
node.children[0].losing_node?(:x)
node.children[0].winning_node?(:x)
node.children[0]
node.children.length
node.children
node
q
y
q
node.children[6].losing_node?(:x)
node.children[5].losing_node?(:x)
node.children[4].losing_node?(:x)
node.children[3].losing_node?(:x)
node.children[0].winning_node?(:x)
node.children[1].winning_node?(:x)
node.children[2].winning_node?(:x)
node.children[2].losing_node?(:x)
node.children[1].losing_node?(:x)
node.children[0].losing_node?(:x)
node.children.length
node.children
node
q
quit
q
n
evaluator
s
children
n
s
node
n
mark
game
quit
opponent_mark
q
node.children[0].winning_node?(:x)
node.children[0].losing_node?(:x)
node.children[2].losing_node?(:x)
node.children[2].winning_node?(:x)
node.children[1].winning_node?(:x)
node.children[0].winning_node?(:x)
node.children.length[0].winning_node?(:x)
node.children.length
node.children
node
s
n
s
n
list=
node
node.children
node.children.each { |child_node| return child_node.prev_move_pos if child_node.winning_node?(mark) } 
node.children
node
s
n
s
n
q
n
s
n
s
n
c
n
s
n
q
n
s
n
s
n
c
n
c
q
n
q
n
q
n
node
nofr
n
q
child_node.prev_move_pos
child_node
n
s
n
s
n
q
prev_move_pos
n
child_node.winning_node?(mark)
mark
child_node
s
list=
children.length
children.lenght
children
n
s
n
q
n
children
n
s
node
n
node
q
n
node
n
quit
board
quit
board
board.each { |i| p i }
board
quit
n
node
n
board.rows
board
n
s
node
n
node
mark
game
list=
board.rows
board
n
s
n
quit
n
s
n
quit
n
node
n
quit
c
s
@node
node
n
mark
game
quit
quity
children[0].children
children[0]
children
self
children
s
n
quit
board
n
quit
n
quit
n
quit
any_opponent_children_node_loser?(evaluator)
all_player_children_nodes_losers?(evaluator)
children[4].losing_node?(:x)
children[5].losing_node?(:o)
children[5].losing_node?(:x)
children[5]
children[5].children[0].oppponent_won?(:x)
children[5].children[0].oppponent_won?(:o)
children[5].children[0].player_won_or_tied?(:x)
children[5].children[0].player_won_or_tied?(:o)
children[5].children[0].oppponent_won?(:o)
children[5].children[0].oppponent_won(:o)
children[5].children[0].opponent_won(:o)
children[5].children[0]
children[5].children[0].children
children[5].children[0]
children[5].children.length
children[5].children
children[5]
children[2]
children[1]
children[0]
children.length
children
evaluator
list=
children
children[0].children[0].children[0]
children[0].children[0].children
children[0].children[0]
children[0].children
children[0]
children.length
children
child_node
s
n
board.over? && (board.winner == evaluator || board.winner == nil)
s
n
 board.over? && board.winner == opponent_mark 
board
s
n
evaluator
quit
evaluator
quit
evaluator
quit
evaluator
quit
opponent_mark
quit
board
board.rows[0][0] = next_mover_mark
board.rows[0,0]
board.rows[0][0]
board.rows[0]
board.rows
list=
duped_board([row, col], next_mover_mark)
duped_board[row, col] = next_mover_mark
duped_board
list=
duped_board
duped_board[row, col] = next_mover_mark
list=
col
row
duped_board
quit
duped_board
